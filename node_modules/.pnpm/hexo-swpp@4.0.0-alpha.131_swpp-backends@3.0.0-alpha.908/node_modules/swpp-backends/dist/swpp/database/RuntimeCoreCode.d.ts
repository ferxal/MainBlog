import { BrowserVersion } from '../SwCompiler';
import { FunctionInBrowser } from './RuntimeDepCode';
import { RuntimeKeyValueDatabase } from './RuntimeKeyValueDatabase';
export type COMMON_TYPE_RUNTIME_CORE = ReturnType<typeof buildCommon>;
/**
 * 运行时核心功能代码
 */
export declare class RuntimeCoreCode extends RuntimeKeyValueDatabase<FunctionInBrowser<any[], any> | null, COMMON_TYPE_RUNTIME_CORE> {
    constructor();
    /** 构建 JS 源代码 */
    buildJsSource(): string;
}
declare function buildCommon(): {
    /** 逃生门功能实现 */
    readonly handleEscape: {
        readonly default: () => Promise<void>;
    };
    /**
     * 缓存增量更新功能实现
     * @param force 是否强制更新
     * @return 标记缓存是否更新，-1 - 新访客，1 - 仅更新版本号，2 - 更新了缓存，string[] - 更新了部分缓存，否则 - 没有进行任何更新
     */
    readonly handleUpdate: {
        readonly default: (oldVersion: BrowserVersion | undefined, force?: boolean) => Promise<1 | -1 | 2 | undefined | null | void | string[]>;
    };
    /** 处理网络请求事件 */
    readonly handleFetchEvent: {
        readonly default: (event: Event) => any;
    };
};
export {};
