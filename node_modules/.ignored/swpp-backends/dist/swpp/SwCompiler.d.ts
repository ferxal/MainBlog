import { CompilationEnv } from './database/CompilationEnv';
import { CompilationFileParser } from './database/CompilationFileParser';
import { CrossDepCode } from './database/CrossDepCode';
import { DomCode } from './database/DomCode';
import { RuntimeCoreCode } from './database/RuntimeCoreCode';
import { RuntimeDepCode } from './database/RuntimeDepCode';
import { CrossEnv } from './database/CrossEnv';
import { RuntimeEventCode } from './database/RuntimeEventCode';
import { RuntimeKeyValueDatabase } from './database/RuntimeKeyValueDatabase';
import { CallChainRecorder } from './debug/CallChainRecorder';
export declare class SwCompiler {
    private swCode;
    /**
     * 构建 sw 代码，该函数结果会被缓存
     */
    buildSwCode(runtime: RuntimeData): string;
}
/** 运行时数据 */
export declare class RuntimeData {
    /** 控制插入顺序 */
    insertOrder: (Exclude<keyof RuntimeData, 'insertOrder' | 'domConfig'> | string)[];
    /** 运行时环境变量 */
    crossEnv: CrossEnv;
    /** 运行时工具函数 */
    runtimeDep: RuntimeDepCode;
    /** 运行时核心功能函数 */
    runtimeCore: RuntimeCoreCode;
    /** 运行时事件注册 */
    runtimeEvent: RuntimeEventCode;
    /** 运行时/编译时工具函数 */
    crossDep: CrossDepCode;
    /** DOM 相关设置 */
    domConfig: DomCode;
    /** 追踪调用链 */
    debugCallChain: CallChainRecorder;
    constructor(compilationData: CompilationData);
    getDatabase(key: string): RuntimeKeyValueDatabase<any, {}>;
    initCompilation(compilation: CompilationData): void;
    freezeAll(): void;
}
/** 编译时数据 */
export declare class CompilationData {
    compilationEnv: CompilationEnv;
    crossDep: CrossDepCode;
    crossEnv: CrossEnv;
    fileParser: CompilationFileParser;
    initRuntime(runtime: RuntimeData): void;
    freezeAll(): void;
}
/** 版本号信息 */
export interface BrowserVersion {
    /** 逃生门版本号 */
    escape: number;
    /** 静态版本号 */
    global: number;
    /** 动态版本号 */
    local: number;
    /** 时间戳 */
    tp?: number;
}
